<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DgAACw4BQL7hQQAAA9dJREFUaEPtmUmvD00Uh6953hhjKYaFYYNYWoiYQsyJmcRCTAkr04IFggjJ+7Ly
        AYQVMQRfAC+JhSnGhQUSMQ8h4eV56t5OkOt2VQ9Y/H/Jk9vVt7qquuvUqVPn39RQQw1Vqo4wCubCOtjU
        gtfeGwnW+avUC5bDaXgDX3OwzilYBj3hj2kA7INs0G/Bl9gMs2AMDG5hLMyGLXAW3kH2MnuhP/w2tYf1
        8AocxEVYBN0gVt1hCVwG23gJa8G2a5Vf6gLY6W2YBGU1Fe6AbZ6DflCLhsJD+B/2Q2eoSl3gINj2AxgC
        lcrBP4WPMN8bNWkB2Id9VfYSmo1f3oarMJk8TYZP4Ez09UYZuai0eae2zi//s5wJ+9RjlVrYehsXlzaf
        Kt3nRJgGutHUDcw1Yd+rQ6mA9PO6Sr1N7ILtABvhEdj597yAHRDblgtb7+RzhUzJTcqOtckYOdXHwGeu
        wEoY14LXN8H/aZKdIEbOns/sDqUEGR64S14KpThpt3Z2HFozFwft/6yzwRuR+g9eQ49QitQKsKPFoRQn
        N6HPMDCUWpemoDe7FkpxWgqOxb/RMqYxtnHLj9UzuNF82aauwofmyyj55d/DyVCKkNPvlJ0JpXjtghiP
        cQvcqFLk7OpQdBK5Mp53yowcq5a7q/49+mu2aBs4phGhlKN5YOWZoVSd/Hrn4QuM90aC5oBjMiTPVbZ5
        jQ6latQOjoDt7vRGotwIfdaQO1dbwcoGcFXpANjmYfBlUjUMfD7KrKt+gelge0ehaFyT9AJVm9B1eAxu
        jkWVZEJmD6xcxSLW69jWoVAqrmxMnrVzZerDylW40cx8DPDKKHOjw0MpR0U3stakGe4BA7oy0v1Gb2TK
        vE1qKFGXzB0ZSpwIpUiZdHLKUoK5upSNxTRMtHxrw2nzNmW0HTwbLAylYjL403ySwmml7frm5m2KaBD4
        vDz3RgHNAJ83UEyW2QgzZh7rPN6lyvWTHS1dhKnqCvfAl+/jjSJy43AAhgJF1BsmQJEP8C/Y96pQKii3
        fmNxQ2CPjL9LLlgHrysvEjv9IHOVJplMNsUe8MtoCtiX5lPYdH6WIYGnKBuucyb88vbxBMwrVSpfwpnQ
        nEw6FbHrX8kF+w9oNveh8sFnMqtgus+O7oJ5m7LSVTpo2zSZUJnZ/EouKg/vZszs1LyNKY+Un4us6w7r
        JmUbukq9TekFmyJnw4yZgZ+DMF7RYxk5eoY1hvdQJF4bEvs/9wTr+ozPuknV/tXbklu8M2CmIfvZqS2s
        Y2Dmgk0OD+qW4a6pD2fATTD7mXUNmFEwno8OiRtqqKE8NTV9Aweq8Z05KqnXAAAAAElFTkSuQmCC
</value>
  </data>
</root>